import "../styles/globals.css";
import type { AppProps } from "next/app";
import {
  Hydrate,
  QueryClient,
  QueryClientProvider,
} from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { useEffect, useState } from "react";
import Head from "next/head";
import Router from "next/router";
import { LoadingOverlay } from "@mantine/core";

function MyApp({ Component, pageProps }: AppProps) {
  const [queryClient] = useState(() => new QueryClient());
  const [pageLoading, setPageLoading] = useState<boolean>(false);

  useEffect(() => {
    const start = () => {
      setPageLoading(true);
    };
    const finish = () => {
      setPageLoading(false);
    };

    Router.events.on("routeChangeStart", start);
    Router.events.on("routeChangeComplete", finish);
    Router.events.on("routeChangeError", finish);

    return () => {
      Router.events.off("routeChangeStart", start);
      Router.events.off("routeChangeComplete", finish);
      Router.events.off("routeChangeError", finish);
    };
  }, []);

  return (
    <QueryClientProvider client={queryClient}>
      <Hydrate state={pageProps.dehydratedState}>
        <Head>
          <title>Cat Wiki</title>
          <meta name="Cat Wiki" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <>
          {pageLoading ? (
            <LoadingOverlay
              loaderProps={{
                size: "lg",
                color: "#544439",
                variant: "oval",
              }}
              overlayOpacity={0.5}
              overlayColor="#c5c5c5"
              visible
            />
          ) : (
            <Component {...pageProps} />
          )}
        </>
      </Hydrate>
      <ReactQueryDevtools />
    </QueryClientProvider>
  );
}

export default MyApp;
